# Generated by Django 4.2.6 on 2024-10-12 22:45

import MAIN.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Developer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=100, unique=True)),
            ],
            options={
                "ordering": ["email"],
            },
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Hashtag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(max_length=20, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Pm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=100, unique=True)),
            ],
            options={
                "ordering": ["email"],
            },
        ),
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_name", MAIN.models.UpperCharField(max_length=20, unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[("Web", "Web"), ("Desktop", "Desktop")],
                        default="Desktop",
                        max_length=7,
                    ),
                ),
                (
                    "version",
                    models.CharField(default="1.0.0", max_length=15, null=True),
                ),
                ("short_description", models.TextField(default="", max_length=200)),
                ("long_description", models.TextField(default="", max_length=10000)),
                ("url", models.URLField(null=True)),
                (
                    "installer",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="download/",
                        validators=[MAIN.models.installer_validator],
                    ),
                ),
                (
                    "presentation",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="presentation/",
                        validators=[MAIN.models.presentation_validator],
                    ),
                ),
                (
                    "user_manual",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="user_manual/",
                        validators=[MAIN.models.presentation_validator],
                    ),
                ),
                (
                    "appendix",
                    models.FileField(blank=True, null=True, upload_to="appendix/"),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "developers",
                    models.ManyToManyField(
                        related_name="developers", to="MAIN.developer"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="MAIN.group",
                    ),
                ),
                (
                    "hashtags",
                    models.ManyToManyField(
                        blank=True, related_name="hashtag", to="MAIN.hashtag"
                    ),
                ),
                (
                    "pm",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="MAIN.pm",
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
            },
        ),
    ]
